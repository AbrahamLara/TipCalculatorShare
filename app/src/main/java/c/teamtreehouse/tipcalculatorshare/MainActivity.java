package c.teamtreehouse.tipcalculatorshare;import android.content.Intent;import android.net.Uri;import android.os.Build;import android.provider.Telephony;import android.support.v7.app.AlertDialog;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.RadioGroup;import android.widget.Spinner;import android.widget.TextView;import android.text.Editable;import android.text.TextWatcher;import android.widget.EditText;import android.widget.SeekBar;import android.widget.Toast;import android.widget.Toolbar;import java.text.NumberFormat;public class MainActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {    private EditText editTextBillAmount;    private TextView billAmount;    private TextView percentage;    private TextView ViewTip;    private TextView viewTotalBill;    private TextView textTip;    //declare the variables for the calculations    private double amount  = 0.0;    private double percent = 0.0;    //declare the variables for the calculations    private double tip   = 0;    private double total = 0;    private static final NumberFormat currencyFormat =            NumberFormat.getCurrencyInstance();    private static final NumberFormat percentFormat =            NumberFormat.getPercentInstance();   private Spinner mySpinner;   private Toolbar menu;   private RadioGroup RadionButtons;    double  spinnerNumber;    double  personPay;   private TextView displayTotal  ;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        mySpinner = (Spinner)findViewById(R.id.spinner) ;        //create a spinner        Spinner spinner = (Spinner) findViewById(R.id.spinner) ;        if (spinner != null){            spinner.setOnItemSelectedListener(this);        }        //Create Arryadapter using the string array and default spinner layout.        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,        R.array.costumer_labels_array, android.R.layout.simple_spinner_dropdown_item);        //Specify the layout to use when the list of choices appears'        adapter.setDropDownViewResource(android.R.layout.simple_dropdown_item_1line);        //apply the adapter to the spinner.        if (spinner != null){            spinner.setAdapter(adapter);        }        billAmount    = (TextView) findViewById(R.id.textView_BillAmount);        percentage    = (TextView) findViewById(R.id.percentage);        ViewTip       = (TextView) findViewById(R.id.viewTip);        viewTotalBill = (TextView) findViewById(R.id.viewTotalBill);        textTip       = (TextView) findViewById(R.id.textTip);        displayTotal  = (TextView)findViewById(R.id.textViewDisplatTotal);        RadionButtons  = (RadioGroup)findViewById(R.id.Radio_Grupo);        final EditText editTextBillAmount = (EditText) findViewById(R.id.editText_BillAmount);        editTextBillAmount.addTextChangedListener(amountEditTextWatcher);        percentage.setText(percentFormat.format(percent));        ViewTip.setText(currencyFormat.format(tip));        SeekBar seekBarPercent = (SeekBar) findViewById(R.id.seekBar);        seekBarPercent.setOnSeekBarChangeListener(seekbarListener);    }    private final TextWatcher amountEditTextWatcher = new TextWatcher() {        @Override        public void beforeTextChanged(CharSequence s, int start, int count, int after) {        }        @Override        public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {            //surround risky calculations with try catch (what if billAmount is 0 ?            //charSequence is converted to a String and parsed to a double for you            amount = Double.parseDouble(charSequence.toString()) / 100;            //setText on the textView            //perform tip and total calculation and update UI by calling calculate            calculate();//uncomment this line        }        @Override        public void afterTextChanged(Editable s) {        }    };    private final SeekBar.OnSeekBarChangeListener seekbarListener = new SeekBar.OnSeekBarChangeListener() {        @Override        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {            percent = progress / 100.0;            calculate();        }        @Override        public void onStartTrackingTouch(SeekBar seekBar) {        }        @Override        public void onStopTrackingTouch(SeekBar seekBar) {        }    };    // calculate and display tip and total amounts    private void calculate() {        // format percent and display in percentTextView        percentage.setText(percentFormat.format(percent));        // calculate the tip and total        tip = amount * percent;        //use the tip example to do the same for the Total        // display tip and total formatted as currency        //user currencyFormat instead of percentFormat to set the textViewTip        ViewTip.setText(currencyFormat.format(tip));        //use the tip example to do the same for the Total        //computes the total by adding the amount spent plus tip        total = amount + tip;        //sets the display to display the total        viewTotalBill.setText(currencyFormat.format(total));        //display formatted bill ammount        billAmount.setText(currencyFormat.format(amount));    }    @Override    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {        String text = parent.getItemAtPosition(position).toString();        Toast.makeText(parent.getContext() , text, Toast.LENGTH_SHORT).show();        spinnerNumber = Double.parseDouble(text);        personPay = (total / spinnerNumber);        displayTotal.setText(currencyFormat.format(personPay));    }    @Override    public void onNothingSelected(AdapterView<?> parent) {    }    public void onRadioButtonClicked(View view ) {        double roundNumber = Math.ceil(personPay);        String strRoundNumber = Double.toString(roundNumber);        if(view.getId() == R.id.radioOne) {            displayTotal.setText(strRoundNumber);        }        else{                        String strTotal = Double.toString(personPay);            displayTotal.setText(strTotal);        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        MenuInflater inflate =  getMenuInflater();        inflate.inflate(R.menu.main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        //get the id        int id =  item.getItemId();        if (id==R.id.menu_item_share)        {            shareText("bill amount $ "+Double.toString(amount)+" total $"+Double.toString(total)+" and each person will pay $"+Double.toString(personPay));            //shareText("bill amount "+Double.toString(amount));            //shareText("tip "+String.valueOf(textTip));            return true;        }        else if (id==R.id.menu_item_info){            showInfoApp();            return true;        }        return super.onOptionsItemSelected(item);    }    public void shareText(String mg) {       Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.parse("smsto:"));       intent.putExtra("sms_body", mg);       if(intent.resolveActivity(getPackageManager())!=null);       startActivity(intent);    }    private void showInfoApp(){        AlertDialog.Builder infoBuilder = new AlertDialog.Builder(this);        infoBuilder.setTitle("Information App");        infoBuilder.setMessage("the Spinner is used to split the total among friends.");        infoBuilder.show();    }}